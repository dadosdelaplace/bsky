---
title: "`{messy}` package"
subtitle: "Estropeando adrede datasets.\n Deliberately messing up datasets"
format:
  revealjs:
    theme: [style.scss]
    menu:
      side: left
      width: normal
    footer: "[<strong>Javier Álvarez Liébana</strong>](https://bsky.app/profile/dadosdelaplace.bsky.social) • @dadosdelaplace • dadosdelaplace.bsky.social"
    slide-number: c/t
execute:
  echo: true
---

## {messy} package


El paquete `{messy}` (de Nicola Rennie) nos permite como **docentes** poder **«ensuciar» bases de datos** con el objetivo de que practicar con datasets defectuosos. También puede ser útil para **desarrolladores de software** (como beta-tester).

&nbsp;

The `{messy}` package (by Nicola Rennie) allows us as **teachers** to **«mess up» datasets**. It can also be useful for **software developers** (as beta testers).


&nbsp;

```{r}
# devtools::install_github("nrennie/messy")
library(messy)
```


---

## Practice with starwars


:::: columns
::: {.column width="50%"}

Vamos practicar usando algunas filas y columnas del dataset starwars (`{dplyr}`).

:::

::: {.column width="50%"}

For practice, we will use some rows and columns from the starwars dataset (`{dplyr}`).

:::

::::

```{r}
library(dplyr)
data <- starwars[1:7, c("name", "height", "mass", "eye_color")]
data
```

---

## Randomly missings


:::: columns
::: {.column width="50%"}

`make_missing()` nos permite introducir ausentes (como `missing = ...`) en las columnas `cols`. El parámetro `messiness` mide la probabilidad de cambio.

:::

::: {.column width="50%"}

`make_missing()` allows us to introduce missing values (as `missing = ...`) in `cols` columns. `messiness` parameter measures the probablity to be changed.

:::
::::

```{r}
data |> 
  make_missing(cols = c("name", "mass"), messiness = 0.3, missing = NA)
```

---


## Switch title/lowercase

:::: columns
::: {.column width="50%"}

`change_case()` nos permite intercambiar mayúsculas y minúsculas en variables de texto de manera aleatoria (por palabras o letras según `case_type`).
:::

::: {.column width="50%"}

`change_case()` allows us randomly switch between title case and lowercase (by words or letters according to `case_type`) for character variables.

:::
::::

```{r}
data |> 
  change_case(cols = c("name", "eye_color"), messiness = 0.3,
              case_type = "letter") # or case_type = "word"
```



---

## Add special characters

:::: columns
::: {.column width="50%"}

`add_special_chars()` nos permite añadir caracteres especiales (*, $, !, ?, ^, etc) en variables de texto.

:::

::: {.column width="50%"}

`add_special_chars()` allows us to introduce special characters (*, $, !, ?, ^, etc) into character variables.

:::
::::

```{r}
data |> 
  add_special_chars(cols = c("name", "eye_color"), messiness = 0.1)
```

---

## Add white spaces

:::: columns
::: {.column width="50%"}

`add_whitespace()` nos permite introducir espacios en blanco en variables de texto .

:::

::: {.column width="50%"}

`add_whitespace()` allows us to introduce white spaces into character variables .

:::
::::

```{r}
data |> 
  add_whitespace(cols = c("name", "eye_color"), messiness = 0.5)
```


---

## Messy variable names

:::: columns
::: {.column width="50%"}

`messy_colnames()` nos permite añadir caracteres especiales y mayúsculas en nombres de variables.

:::

::: {.column width="50%"}

`messy_colnames()` allows us to adds randomly special characters and  capitalises in column names.

:::
::::
```{r}
data |> 
  messy_colnames(messiness = 0.2)
```

---

## In summary

:::: columns
::: {.column width="50%"}

Podemos combinar todo lo anterior con pipes. Puedes ver toda la info en <https://nrennie.rbind.io/messy/>

:::

::: {.column width="50%"}

We can combine all actions using pipes. You can check all at <https://nrennie.rbind.io/messy/>

:::
::::

```{r}
data |> 
  make_missing(cols = c("name", "eye_color"), missing = " ",
               messiness = 0.2) |> 
  make_missing(cols = c("height", "mass"), missing = NA,
               messiness = 0.2) |> 
  add_whitespace(cols = "name", messiness = 0.1) |> 
  add_special_chars(cols = c("name", "eye_color"), messiness = 0.1) |> 
  messy_colnames(messiness = 0.2)
```

